Ext.data.JsonP.Ext_ClassManager({"parentMixins":[],"singleton":false,"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/ClassManager.html#Ext-ClassManager' target='_blank'>ClassManager.js</a></div></pre><div class='doc-contents'><p><p>Ext.ClassManagerは、すべてのクラスを管理し、フレームワーク全体に渡って実際のクラスオブジェクトに対しクラス名文字列をマッピングします。\n直接ではなく、以下の便利なショートハンドを介してアクセスします。</p>\n\n<ul>\n<li><a href=\"#/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a></li>\n<li><a href=\"#/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a></li>\n<li><a href=\"#/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a></li>\n<li><a href=\"#/api/Ext-method-getClass\" rel=\"Ext-method-getClass\" class=\"docClass\">Ext.getClass</a></li>\n<li><a href=\"#/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a></li>\n</ul>\n\n<h1>基本的な文法:</h1>\n\n<pre><code>Ext.define(className, properties);\n</code></pre>\n\n<p><code>properties</code>は、クラスに適用されるプロパティを記述したオブジェクトです。\n詳しくは\n<a href=\"#!/api/Ext.ClassManager-method-create\" rel=\"Ext.ClassManager-method-create\" class=\"docClass\">create</a>\nをご覧ください。</p>\n\n<pre><code>Ext.define('Person', {\n     name: 'Unknown',\n\n     constructor: function(name) {\n         if (name) {\n             this.name = name;\n         }\n\n         return this;\n     },\n\n     eat: function(foodType) {\n         alert(\"I'm eating: \" + foodType);\n\n         return this;\n     }\n});\n\nvar aaron = new Person(\"Aaron\");\naaron.eat(\"Sandwich\"); // alert(\"I'm eating: Sandwich\");\n</code></pre>\n\n<p><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>\nにはパワフルで拡張性のある\n<a href=\"#!/api/Ext.Class-static-method-registerPreprocessor\" rel=\"Ext.Class-static-method-registerPreprocessor\" class=\"docClass\">pre-processors</a>\nがいくつかあります。\nそれらは、\nインクルード(継承に限らず)、ミックスイン、コンフィグ、静的メンバなど、\nクラス生成に関連する全てについて世話取りします。</p>\n\n<h1>継承:</h1>\n\n<pre><code>Ext.define('Developer', {\n     extend: 'Person',\n\n     constructor: function(name, isGeek) {\n         this.isGeek = isGeek;\n\n         // Apply a method from the parent class' prototype\n         this.callParent([name]);\n\n         return this;\n\n     },\n\n     code: function(language) {\n         alert(\"I'm coding in: \" + language);\n\n         this.eat(\"Bugs\");\n\n         return this;\n     }\n});\n\nvar jacky = new Developer(\"Jacky\", true);\njacky.code(\"JavaScript\"); // alert(\"I'm coding in: JavaScript\");\n                          // alert(\"I'm eating: Bugs\");\n</code></pre>\n\n<p>スーパークラスのメソッドをコールする方法については、\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">Ext.Base.callParent</a>\nを参照してください。</p>\n\n<h1>ミックスイン:</h1>\n\n<pre><code>Ext.define('CanPlayGuitar', {\n     playGuitar: function() {\n        alert(\"F#...G...D...A\");\n     }\n});\n\nExt.define('CanComposeSongs', {\n     composeSongs: function() { ... }\n});\n\nExt.define('CanSing', {\n     sing: function() {\n         alert(\"I'm on the highway to hell...\")\n     }\n});\n\nExt.define('Musician', {\n     extend: 'Person',\n\n     mixins: {\n         canPlayGuitar: 'CanPlayGuitar',\n         canComposeSongs: 'CanComposeSongs',\n         canSing: 'CanSing'\n     }\n})\n\nExt.define('CoolPerson', {\n     extend: 'Person',\n\n     mixins: {\n         canPlayGuitar: 'CanPlayGuitar',\n         canSing: 'CanSing'\n     },\n\n     sing: function() {\n         alert(\"Ahem....\");\n\n         this.mixins.canSing.sing.call(this);\n\n         alert(\"[Playing guitar at the same time...]\");\n\n         this.playGuitar();\n     }\n});\n\nvar me = new CoolPerson(\"Jacky\");\n\nme.sing(); // alert(\"Ahem...\");\n           // alert(\"I'm on the highway to hell...\");\n           // alert(\"[Playing guitar at the same time...]\");\n           // alert(\"F#...G...D...A\");\n</code></pre>\n\n<h1>コンフィグ:</h1>\n\n<pre><code>Ext.define('SmartPhone', {\n     config: {\n         hasTouchScreen: false,\n         operatingSystem: 'Other',\n         price: 500\n     },\n\n     isExpensive: false,\n\n     constructor: function(config) {\n         this.initConfig(config);\n\n         return this;\n     },\n\n     applyPrice: function(price) {\n         this.isExpensive = (price &gt; 500);\n\n         return price;\n     },\n\n     applyOperatingSystem: function(operatingSystem) {\n         if (!(/^(iOS|Android|BlackBerry)$/i).test(operatingSystem)) {\n             return 'Other';\n         }\n\n         return operatingSystem;\n     }\n});\n\nvar iPhone = new SmartPhone({\n     hasTouchScreen: true,\n     operatingSystem: 'iOS'\n});\n\niPhone.getPrice(); // 500;\niPhone.getOperatingSystem(); // 'iOS'\niPhone.getHasTouchScreen(); // true;\niPhone.hasTouchScreen(); // true\n\niPhone.isExpensive; // false;\niPhone.setPrice(600);\niPhone.getPrice(); // 600\niPhone.isExpensive; // true;\n\niPhone.setOperatingSystem('AlienOS');\niPhone.getOperatingSystem(); // 'Other'\n</code></pre>\n\n<h1>静的メンバー:</h1>\n\n<pre><code>Ext.define('Computer', {\n     statics: {\n         factory: function(brand) {\n            // 'this' in static methods refer to the class itself\n             return new this(brand);\n         }\n     },\n\n     constructor: function() { ... }\n});\n\nvar dellComputer = Computer.factory('Dell');\n</code></pre>\n\n<p>静的メンバーへのアクセスについては\n<a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">Ext.Base.statics</a>\nや\n<a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">Ext.Base.self</a>\nを参照してください。</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-classes' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-classes' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-classes' class='name expandable'>classes</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'><p>ClassManagerを通して定義された全てのクラス。</p> ...</div><div class='long'><p><p>ClassManagerを通して定義された全てのクラス。\nキーはクラス名で値はクラスへの参照。</p></p>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-createdListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-createdListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-createdListeners' class='name expandable'>createdListeners</a><span> : Array</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-defaultPostprocessors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-defaultPostprocessors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-defaultPostprocessors' class='name expandable'>defaultPostprocessors</a><span> : Array</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-enableNamespaceParseCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-enableNamespaceParseCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-enableNamespaceParseCache' class='name expandable'>enableNamespaceParseCache</a><span> : Boolean</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>true</code></p></div></div></div><div id='property-existCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-existCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-existCache' class='name expandable'>existCache</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-instantiators' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-instantiators' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-instantiators' class='name expandable'>instantiators</a><span> : Array</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>[]</code></p></div></div></div><div id='property-maps' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-maps' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-maps' class='name expandable'>maps</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{alternateToName: {}, aliasToName: {}, nameToAliases: {}, nameToAlternates: {}, overridesByName: {}}</code></p></div></div></div><div id='property-nameCreatedListeners' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-nameCreatedListeners' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-nameCreatedListeners' class='name expandable'>nameCreatedListeners</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-namespaceParseCache' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-namespaceParseCache' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-namespaceParseCache' class='name expandable'>namespaceParseCache</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div><div id='property-namespaceRewrites' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-namespaceRewrites' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-namespaceRewrites' class='name not-expandable'>namespaceRewrites</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'>\n</div><div class='long'>\n</div></div></div><div id='property-postprocessors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-property-postprocessors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-property-postprocessors' class='name expandable'>postprocessors</a><span> : Object</span><strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-applyOverrides' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-applyOverrides' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-applyOverrides' class='name expandable'>applyOverrides</a>( <span class='pre'>Object name</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-create' class='name expandable'>create</a>( <span class='pre'>Object className, Object data, Object createdFn</span> )</div><div class='description'><div class='short'> ...</div><div class='long'><p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>data</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>createdFn</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-createNamespaces' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-createNamespaces' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-createNamespaces' class='name expandable'>createNamespaces</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'><p>新しい Ext.ns ネームスペースのリライトをサポートします。</p> ...</div><div class='long'><p><p>新しい Ext.ns ネームスペースのリライトをサポートします。</p></p>\n</div></div></div><div id='method-dynInstantiate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-dynInstantiate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-dynInstantiate' class='name expandable'>dynInstantiate</a>( <span class='pre'>Object name, Object args</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'><p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : Object<div class='sub-desc'><p></p>\n</div></li><li><span class='pre'>args</span> : Object<div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-get' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-get' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-get' class='name expandable'>get</a>( <span class='pre'>String name</span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></div><div class='description'><div class='short'><p>クラスの名前からクラスを取得します。</p> ...</div><div class='long'><p><p>クラスの名前からクラスを取得します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'><p><p>class </p></p>\n</div></li></ul></div></div></div><div id='method-getAliasesByName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getAliasesByName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getAliasesByName' class='name expandable'>getAliasesByName</a>( <span class='pre'>String name</span> ) : Array</div><div class='description'><div class='short'><p>クラス名から、エリアス名配列を取得します。</p> ...</div><div class='long'><p><p>クラス名から、エリアス名配列を取得します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Array</span><div class='sub-desc'><p><p>エリアス名</p></p>\n</div></li></ul></div></div></div><div id='method-getByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getByAlias' class='name expandable'>getByAlias</a>( <span class='pre'>String alias</span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></div><div class='description'><div class='short'><p>エイリアス名から、クラスの参照を取得します。</p> ...</div><div class='long'><p><p>エイリアス名から、クラスの参照を取得します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'><p><p>class </p></p>\n</div></li></ul></div></div></div><div id='method-getClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getClass' class='name expandable'>getClass</a>( <span class='pre'>Object object</span> ) : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></div><div class='description'><div class='short'><p>指定されたオブジェクトのクラスを取得します。 Ext.defineで生成されたインスタンスでな...</p> ...</div><div class='long'><p><p>指定されたオブジェクトのクラスを取得します。 Ext.defineで生成されたインスタンスでない場合、nullを返します。\n通常はショートハンドである\n<a href=\"#!/api/Ext-method-getClass\" rel=\"Ext-method-getClass\" class=\"docClass\">Ext.getClass</a>\nから呼び出されます。</p>\n\n<pre><code>var component = new Ext.Component();\n\nExt.ClassManager.getClass(component); // returns Ext.Component\n</code></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a></span><div class='sub-desc'><p><p>class</p></p>\n</div></li></ul></div></div></div><div id='method-getDisplayName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getDisplayName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getDisplayName' class='name expandable'>getDisplayName</a>( <span class='pre'>Object object</span> ) : String</div><div class='description'><div class='short'>{Ext:method-getDisplayName:desc} ...</div><div class='long'><p>{Ext:method-getDisplayName:desc}</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p>{Ext:mmethod-getDisplayName:param_object}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>{Ext:mmethod-getDisplayName:return}</p>\n</div></li></ul></div></div></div><div id='method-getInstantiator' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getInstantiator' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getInstantiator' class='name expandable'>getInstantiator</a>( <span class='pre'>Object length</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'><p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>length</span> : Object<div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-getName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getName' class='name expandable'>getName</a>( <span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/Object object</span> ) : String</div><div class='description'><div class='short'><p>参照、またはインスタンスからクラス名を取得します。</p> ...</div><div class='long'><p><p>参照、またはインスタンスからクラス名を取得します。\n通常はショートハンドである\n<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>\nから呼び出されます。</p>\n\n<pre><code>Ext.ClassManager.getName(Ext.Action); // returns \"Ext.Action\"\n</code></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/Object<div class='sub-desc'><p>{Ext_ClassManager:method-getName:desc}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p>{Ext_ClassManager:method-getName:desc}</p>\n</div></li></ul></div></div></div><div id='method-getNameByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getNameByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getNameByAlias' class='name expandable'>getNameByAlias</a>( <span class='pre'>String alias</span> ) : String</div><div class='description'><div class='short'><p>エイリアス名からクラス名を取得します。</p> ...</div><div class='long'><p><p>エイリアス名からクラス名を取得します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p><p>className </p></p>\n</div></li></ul></div></div></div><div id='method-getNameByAlternate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getNameByAlternate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getNameByAlternate' class='name expandable'>getNameByAlternate</a>( <span class='pre'>String alternate</span> ) : String</div><div class='description'><div class='short'><p>代替名からクラス名を取得します。</p> ...</div><div class='long'><p><p>代替名からクラス名を取得します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alternate</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p><p>className </p></p>\n</div></li></ul></div></div></div><div id='method-getNamesByExpression' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-getNamesByExpression' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-getNamesByExpression' class='name expandable'>getNamesByExpression</a>( <span class='pre'>String expression</span> ) : String[]</div><div class='description'><div class='short'><p>文字列式に一致するクラス名を配列で取得します。 式は、クラス名、またはエイリアス名から参照しま...</p> ...</div><div class='long'><p><p>文字列式に一致するクラス名を配列で取得します。 式は、クラス名、またはエイリアス名から参照します。 ワイルドカードもサポートします。</p>\n\n<pre><code> // returns ['Ext.window.Window']\nvar window = Ext.ClassManager.getNamesByExpression('widget.window');\n\n// returns ['widget.panel', 'widget.window', ...]\nvar allWidgets = Ext.ClassManager.getNamesByExpression('widget.*');\n\n// returns ['Ext.data.Store', 'Ext.data.ArrayProxy', ...]\nvar allData = Ext.ClassManager.getNamesByExpression('Ext.data.*');\n</code></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>expression</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String[]</span><div class='sub-desc'><p><p>classNames</p></p>\n</div></li></ul></div></div></div><div id='method-instantiate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-instantiate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-instantiate' class='name expandable'>instantiate</a>( <span class='pre'></span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n</div></div></div><div id='method-instantiateByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-instantiateByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-instantiateByAlias' class='name expandable'>instantiateByAlias</a>( <span class='pre'>String alias, Object... args</span> ) : Object</div><div class='description'><div class='short'><p>エイリアス名から、クラスをインスタンス化します。</p> ...</div><div class='long'><p><p>エイリアス名から、クラスをインスタンス化します。</p>\n\n<p>通常はショートハンドである\n<a href=\"#!/api/Ext-method-createByAlias\" rel=\"Ext-method-createByAlias\" class=\"docClass\">Ext.createByAlias</a>\nから呼び出されます。\n<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nが\n<a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\">有効(<code>enabled</code>)</a>\nで、クラスが定義されていない場合、同期読み込みによってクラスをロードすることを試みます。</p>\n\n<pre><code>var window = Ext.ClassManager.instantiateByAlias('widget.window', { width: 600, height: 800, ... });\n</code></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>alias</span> : String<div class='sub-desc'><p></p>\n</div></li><li><span class='pre'>args</span> : Object...<div class='sub-desc'><p><p>第一引数のname以降は、すべてクラスのコンストラクタへ渡されます。</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>instance</p></p>\n</div></li></ul></div></div></div><div id='method-isCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-isCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-isCreated' class='name expandable'>isCreated</a>( <span class='pre'>String className</span> ) : Boolean</div><div class='description'><div class='short'><p>クラスがすでに生成されているかをチェックします。</p> ...</div><div class='long'><p><p>クラスがすでに生成されているかをチェックします。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><p>生成されている場合はtrue</p></p>\n</div></li></ul></div></div></div><div id='method-onCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-onCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-onCreated' class='name expandable'>onCreated</a>( <span class='pre'>Object fn, Object scope, Object className</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>fn</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'>\n</div></li><li><span class='pre'>className</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-parseNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-parseNamespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-parseNamespace' class='name expandable'>parseNamespace</a>( <span class='pre'>Object namespace</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'>Supports namespace rewriting ...</div><div class='long'><p>Supports namespace rewriting</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespace</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-registerPostprocessor' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-registerPostprocessor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-registerPostprocessor' class='name expandable'>registerPostprocessor</a>( <span class='pre'>String name, Function postprocessor</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'><p>post-processor関数を登録します。</p> ...</div><div class='long'><p><p>post-processor関数を登録します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p></p>\n</div></li><li><span class='pre'>postprocessor</span> : Function<div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-set' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-set' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-set' class='name expandable'>set</a>( <span class='pre'>String name, Object value</span> ) : <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a></div><div class='description'><div class='short'><p>クラスに名前の参照を設定します。</p> ...</div><div class='long'><p><p>クラスに名前の参照を設定します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p></p>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a></span><div class='sub-desc'><p><p>this</p></p>\n</div></li></ul></div></div></div><div id='method-setAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-setAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-setAlias' class='name expandable'>setAlias</a>( <span class='pre'><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/String cls, String alias</span> )</div><div class='description'><div class='short'><p>クラスにエイリアス名を登録します。</p> ...</div><div class='long'><p><p>クラスにエイリアス名を登録します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>cls</span> : <a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/String<div class='sub-desc'><p><p>クラスの参照、またはクラス名</p></p>\n</div></li><li><span class='pre'>alias</span> : String<div class='sub-desc'><p><p>このクラスの参照として使用するエイリアス名</p></p>\n</div></li></ul></div></div></div><div id='method-setDefaultPostprocessorPosition' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-setDefaultPostprocessorPosition' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-setDefaultPostprocessorPosition' class='name expandable'>setDefaultPostprocessorPosition</a>( <span class='pre'>String name, String offset, String relativeName</span> ) : <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'><p>スタック内の特定の位置にこのpost-processorを挿入します。 必要に応じて、既存のp...</p> ...</div><div class='long'><p><p>スタック内の特定の位置にこのpost-processorを挿入します。 必要に応じて、既存のpost-processorの位置を基準にすることも可能です。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p>{Ext_ClassManager:method-setDefaultPostprocessorPosition:desc}</p>\n</div></li><li><span class='pre'>offset</span> : String<div class='sub-desc'><p>{Ext_ClassManager:method-setDefaultPostprocessorPosition:paraam_offset}</p>\n</div></li><li><span class='pre'>relativeName</span> : String<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a></span><div class='sub-desc'><p><p>this</p></p>\n</div></li></ul></div></div></div><div id='method-setDefaultPostprocessors' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-setDefaultPostprocessors' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-setDefaultPostprocessors' class='name expandable'>setDefaultPostprocessors</a>( <span class='pre'>String/Array postprocessors</span> ) : <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a><strong class='private signature'>private</strong></div><div class='description'><div class='short'><p>すべてのクラスに適用される、デフォルトのpost-processor配列スタックを設定します。</p> ...</div><div class='long'><p><p>すべてのクラスに適用される、デフォルトのpost-processor配列スタックを設定します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>postprocessors</span> : String/Array<div class='sub-desc'><p>{Ext_ClassManager:method-setDefaultPostprocessors:desc}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a></span><div class='sub-desc'><p>{Ext_ClassManager:method-setDefaultPostprocessors:desc}</p>\n</div></li></ul></div></div></div><div id='method-setNamespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-setNamespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-setNamespace' class='name expandable'>setNamespace</a>( <span class='pre'>String name, Object value</span> )</div><div class='description'><div class='short'><p>名前空間を作成し、作成したオブジェクトにvalueを挿入します。</p> ...</div><div class='long'><p><p>名前空間を作成し、作成したオブジェクトにvalueを挿入します。</p>\n\n<pre><code>Ext.ClassManager.setNamespace('MyCompany.pkg.Example', someObject);\n\nalert(MyCompany.pkg.Example === someObject); // alerts true\n</code></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String<div class='sub-desc'><p></p>\n</div></li><li><span class='pre'>value</span> : Object<div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-triggerCreated' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext.ClassManager'>Ext.ClassManager</span><br/><a href='source/ClassManager.html#Ext-ClassManager-method-triggerCreated' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext.ClassManager-method-triggerCreated' class='name expandable'>triggerCreated</a>( <span class='pre'>Object className</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":[],"requires":[],"mixins":[],"code_type":"nop","inheritable":false,"meta":{},"files":[{"href":"ClassManager.html#Ext-ClassManager","filename":"ClassManager.js"}],"uses":[],"members":{"cfg":[],"event":[],"method":[{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"applyOverrides","id":"method-applyOverrides"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"create","id":"method-create"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"createNamespaces","id":"method-createNamespaces"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"dynInstantiate","id":"method-dynInstantiate"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"get","id":"method-get"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getAliasesByName","id":"method-getAliasesByName"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getByAlias","id":"method-getByAlias"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getClass","id":"method-getClass"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getDisplayName","id":"method-getDisplayName"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"getInstantiator","id":"method-getInstantiator"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getName","id":"method-getName"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getNameByAlias","id":"method-getNameByAlias"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getNameByAlternate","id":"method-getNameByAlternate"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"getNamesByExpression","id":"method-getNamesByExpression"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"instantiate","id":"method-instantiate"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"instantiateByAlias","id":"method-instantiateByAlias"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"isCreated","id":"method-isCreated"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"onCreated","id":"method-onCreated"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"parseNamespace","id":"method-parseNamespace"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"registerPostprocessor","id":"method-registerPostprocessor"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"set","id":"method-set"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"setAlias","id":"method-setAlias"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"setDefaultPostprocessorPosition","id":"method-setDefaultPostprocessorPosition"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"setDefaultPostprocessors","id":"method-setDefaultPostprocessors"},{"owner":"Ext.ClassManager","meta":{},"tagname":"method","name":"setNamespace","id":"method-setNamespace"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"method","name":"triggerCreated","id":"method-triggerCreated"}],"property":[{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"classes","id":"property-classes"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"createdListeners","id":"property-createdListeners"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"defaultPostprocessors","id":"property-defaultPostprocessors"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"enableNamespaceParseCache","id":"property-enableNamespaceParseCache"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"existCache","id":"property-existCache"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"instantiators","id":"property-instantiators"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"maps","id":"property-maps"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"nameCreatedListeners","id":"property-nameCreatedListeners"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"namespaceParseCache","id":"property-namespaceParseCache"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"namespaceRewrites","id":"property-namespaceRewrites"},{"owner":"Ext.ClassManager","meta":{"private":true},"tagname":"property","name":"postprocessors","id":"property-postprocessors"}],"css_var":[],"css_mixin":[]},"html_meta":{},"aliases":{},"superclasses":[],"component":false,"tagname":"class","name":"Ext.ClassManager","alternateClassNames":[],"inheritdoc":null,"id":"class-Ext.ClassManager","mixedInto":[],"extends":null});