Ext.data.JsonP.Ext({"parentMixins":[],"singleton":true,"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"html":"<div><pre class=\"hierarchy\"><h4>Files</h4><div class='dependency'><a href='source/Ext.html#Ext' target='_blank'>Ext.js</a></div></pre><div class='doc-contents'><p><p>名前空間 Ext (グローバルなオブジェクト)は、 クラス、シングルトン、便利なメソッドを内包するSenchaが提供するライブラリです。</p>\n\n<p>\"大部分のUIコンポーネントは、下層レベルの名前空間として階層化されています。\nしかし、多くの便利な関数は、Extオブジェクトのプロパティとして提供されます。 また、他のクラスメソッドで、頻繁に利用されるメソッドは、Extオブジェクトのショートカットとして提供されます。\"</p></p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-emptyString' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-emptyString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-emptyString' class='name not-expandable'>emptyString</a><span> : Object</span></div><div class='description'><div class='short'><p><p>trueテストにパスする長さ0の文字列。</p></p>\n</div><div class='long'><p><p>trueテストにパスする長さ0の文字列。\ntrueテストを使うメソッドに渡すときに、falseが返されません。</p></p>\n</div></div></div><div id='property-name' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-property-name' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-property-name' class='name expandable'>name</a><span> : String</span></div><div class='description'><div class='short'><p>Extの現在のインタンスを参照するグローバル ネームスペース(Node.jsではglobal)...</p> ...</div><div class='long'><p><p>Extの現在のインタンスを参照するグローバル ネームスペース(Node.jsではglobal)でのプロパティ名です。\nこれは通常<code>\"Ext\"</code>です、しかし、ExtJSのサンドボックス ビルドが使われている時は違う名前になります。\nコードが<code>eval</code>で使われるか<code>new Function</code>で生成されるように生成されいて、\nExtのグローバル インスタンスを参照する必要がある場合には、\nコードに組み入れられなければならない名前です。</p></p>\n<p>デフォルトは: <code>&quot;Ext&quot;</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-apply' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-apply' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-apply' class='name expandable'>apply</a>( <span class='pre'>Object object, Object config, Object defaults</span> ) : Object</div><div class='description'><div class='short'><p>設定されたコンフィグオブジェクトをオブジェクトに全てコピーします。</p> ...</div><div class='long'><p><p>設定されたコンフィグオブジェクトをオブジェクトに全てコピーします。</p>\n\n<p>Note: オブジェクトや配列に対して、再帰的なコピーを行わず、クローンを作成してコピーする場合は、\n<a href=\"#!/api/Ext.Object-method-merge\" rel=\"Ext.Object-method-merge\" class=\"docClass\" >Ext.Object.merge</a>\nを利用してください。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p><p>適用されるオブジェクト</p></p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p><p>適用するオブジェクト</p></p>\n</div></li><li><span class='pre'>defaults</span> : Object<div class='sub-desc'><p><p>初期値として適用されるオブジェクト</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>適用後のオブジェクト</p></p>\n</div></li></ul></div></div></div><div id='method-applyIf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-applyIf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-applyIf' class='name expandable'>applyIf</a>( <span class='pre'>Object object, Object config</span> ) : Object</div><div class='description'><div class='short'><p>プロパティ値が存在しないものに対して、設定されたコンフィグオブジェクトをオブジェクトにコピーし...</p> ...</div><div class='long'><p><p>プロパティ値が存在しないものに対して、設定されたコンフィグオブジェクトをオブジェクトにコピーします。 既に存在するプロパティは上書きしません。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p><p>適用されるオブジェクト</p></p>\n</div></li><li><span class='pre'>config</span> : Object<div class='sub-desc'><p><p>適用するオブジェクト</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>適用後のオブジェクト</p></p>\n</div></li></ul></div></div></div><div id='method-clone' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-clone' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-clone' class='name expandable'>clone</a>( <span class='pre'>Object item</span> ) : Object</div><div class='description'><div class='short'><p>配列やオブジェクト、DOMノード、日付を含むほとんどのタイプの変数のクローンを古い参照を保存す...</p> ...</div><div class='long'><p><p>配列やオブジェクト、DOMノード、日付を含むほとんどのタイプの変数のクローンを古い参照を保存することなく生成します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>item</span> : Object<div class='sub-desc'><p><p>クローンする変数</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>クローン</p></p>\n</div></li></ul></div></div></div><div id='method-create' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-create' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-create' class='name expandable'>create</a>( <span class='pre'>[String name], [Object... args]</span> ) : Object</div><div class='description'><div class='short'><p>フルネーム、エリアス、別名(alternate name)からクラスをインスタンス化します。</p> ...</div><div class='long'><p><p>フルネーム、エリアス、別名(alternate name)からクラスをインスタンス化します。</p>\n\n<p><a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\" >Ext.Loader</a>\nが\n<a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\" >enabled</a>\nでクラスがまだ定義されていない場合は、\nクラスを同期的にロードしようと試みます。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>name</span> : String (optional)<div class='sub-desc'><p><p>クラス名またはエリアス。\nパラメーターが1つだけの場合には、<code>xclass</code>プロパティとして指定できます。</p></p>\n</div></li><li><span class='pre'>args</span> : Object... (optional)<div class='sub-desc'><p><p>クラスのコンストラクターに渡される追加の引数。</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>インスタンス</p></p>\n</div></li></ul></div></div></div><div id='method-createByAlias' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-createByAlias' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-createByAlias' class='name expandable'>createByAlias</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.ClassManager.instantiateByAlias</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.ClassManager-method-instantiateByAlias\" rel=\"Ext.ClassManager-method-instantiateByAlias\" class=\"docClass\" >Ext.ClassManager.instantiateByAlias</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-decode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-decode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-decode' class='name expandable'>decode</a>( <span class='pre'></span> )</div><div class='description'><div class='short'> ...</div><div class='long'><p></p>\n</div></div></div><div id='method-define' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-define' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-define' class='name expandable'>define</a>( <span class='pre'>String className, Object data, Function createdFn</span> ) : <a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></div><div class='description'><div class='short'><p>クラスまたはオーバーライドを定義します。基本的なクラスは次のように定義します。</p> ...</div><div class='long'><p><p>クラスまたはオーバーライドを定義します。基本的なクラスは次のように定義します。</p>\n\n<pre><code>Ext.define('My.awesome.Class', {\n    someProperty: 'something',\n    someMethod: function() {\n         alert(s + this.someProperty);\n    }\n    ...\n});\n\nvar obj = new My.awesome.Class();\n\nobj.someMethod('Say '); // alerts 'Say something'\n</code></pre>\n\n<p>オーバーライドを定義するには、<code>override</code>プロパティを指定します。\noverrideの中身は、拡張あるいは変更するクラスを指定します。\nこれにより簡単な設定で、デフォルトのプロパティ値や\nメソッドを拡張／入替をすることができます。\nまたクラスの静的メソッドも拡張できます。</p>\n\n<p>overrideの1つの用途は大きなクラスを管理しやすい部品に分解することです。</p>\n\n<pre><code> // File: /src/app/Panel.js\n\n Ext.define('My.app.Panel', {\n     extend: 'Ext.panel.Panel',\n     requires: [\n         'My.app.PanelPart2',\n         'My.app.PanelPart3'\n     ]\n\n     constructor: function(config) {\n         this.callParent(arguments); // calls Ext.panel.Panel's constructor\n         //...\n     },\n\n     statics: {\n         method: function() {\n             return 'abc';\n         }\n     }\n });\n\n // File: /src/app/PanelPart2.js\n Ext.define('My.app.PanelPart2', {\n     override: 'My.app.Panel',\n\n     constructor: function(config) {\n         this.callParent(arguments); // calls My.app.Panel's constructor\n         //...\n     }\n });\n</code></pre>\n\n<p>overrideの他の用途は独立して使用されるクラスのオプションのパーツを提供することです。\nこの場合は、クラスはまったくオーバーライドされたことに気づかないことさえあります。</p>\n\n<pre><code> Ext.define('My.ux.CoolTip', {\n     override: 'Ext.tip.ToolTip',\n\n     constructor: function(config) {\n         this.callParent(arguments); // calls Ext.tip.ToolTip's constructor\n         //...\n     }\n });\n</code></pre>\n\n<p>上記のオーバーライドは普通にrequireすることができます。</p>\n\n<pre><code> Ext.define('My.app.App', {\n     requires: [\n         'My.ux.CoolTip'\n     ]\n });\n</code></pre>\n\n<p>静的メソッドもオーバーライドできます。</p>\n\n<pre><code> Ext.define('My.app.BarMod', {\n     override: 'Ext.foo.Bar',\n\n     statics: {\n         method: function(x) {\n             return this.callParent([x * 2]); // call Ext.foo.Bar.method\n         }\n     }\n });\n</code></pre>\n\n<p>重要:\nオーバーライドはrequireされたときに初めてビルドにインクルードされます。\nそうでなければ、オーバーライドは対象クラスのようにインクルードされません。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>className</span> : String<div class='sub-desc'><p><p>生成するクラス名をドット区切りのネームスペース形式の文字列で指定します。例:\n<code>'My.very.awesome.Class', 'FeedViewer.plugin.CoolPager'</code>\n次の簡単な規則に従うことが強く推奨されます。</p>\n\n<ul>\n<li>ルートとクラス名はキャメルケース(CamelCase)にすること</li>\n<li>他のすべては小文字にすること</li>\n</ul></p>\n</div></li><li><span class='pre'>data</span> : Object<div class='sub-desc'><p><p>このクラスに適用するプロパティをキー／値ペアで指定します。\nプロパティ名は次に挙げるものを除いた文字列が指定できます。</p>\n\n<ul>\n<li><code>mixins</code></li>\n<li><code>statics</code></li>\n<li><code>config</code></li>\n<li><code>alias</code></li>\n<li><code>self</code></li>\n<li><code>singleton</code></li>\n<li><code>alternateClassName</code></li>\n<li><code>override</code></li>\n</ul></p>\n</div></li><li><span class='pre'>createdFn</span> : Function<div class='sub-desc'><p><p>(オプション)\nクラスが生成された後に実行されるコールバック関数です、\n実行時のスコープは生成されたクラス自身になります。</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'><a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a></span><div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-each' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-each' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-each' class='name expandable'>each</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>each</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\">each</a>\nのショートカット。</p></p>\n</div></div></div><div id='method-emptyFn' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-emptyFn' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-emptyFn' class='name expandable'>emptyFn</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>空の関数。</p> ...</div><div class='long'><p><p>空の関数。</p></p>\n</div></div></div><div id='method-encode' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-encode' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-encode' class='name expandable'>encode</a>( <span class='pre'></span> )</div><div class='description'><div class='short'> ...</div><div class='long'><p></p>\n</div></div></div><div id='method-exclude' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Loader.html#Ext-method-exclude' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-exclude' class='name expandable'>exclude</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.Loader.exclude</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Loader-method-exclude\" rel=\"Ext.Loader-method-exclude\" class=\"docClass\" >Ext.Loader.exclude</a>\nのショートカット。</p></p>\n</div></div></div><div id='method-getClass' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-getClass' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getClass' class='name expandable'>getClass</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.ClassManager.getClass</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.ClassManager-method-getClass\" rel=\"Ext.ClassManager-method-getClass\" class=\"docClass\" >Ext.ClassManager.getClass</a>\nのショートカット。</p></p>\n</div></div></div><div id='method-getClassName' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-getClassName' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getClassName' class='name expandable'>getClassName</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.ClassManager.getName</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.ClassManager-method-getName\" rel=\"Ext.ClassManager-method-getName\" class=\"docClass\">Ext.ClassManager.getName</a>\nのショートカット。</p></p>\n</div></div></div><div id='method-getRandomInt' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-getRandomInt' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-getRandomInt' class='name expandable'>getRandomInt</a>( <span class='pre'>Number min, Number max</span> ) : Number</div><div class='description'><div class='short'><p>minとmaxの間のランダム値を取得します。</p> ...</div><div class='long'><p><p>minとmaxの間のランダム値を取得します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>min</span> : Number<div class='sub-desc'><p><p>最小値</p></p>\n</div></li><li><span class='pre'>max</span> : Number<div class='sub-desc'><p><p>最大値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Number</span><div class='sub-desc'><p><p>random value</p></p>\n</div></li></ul></div></div></div><div id='method-isArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isArray' class='name expandable'>isArray</a>( <span class='pre'>Object target</span> ) : Boolean</div><div class='description'><div class='short'><p>渡された値がjavaScriptの配列であればtrue、さもなくばfalseを返します。</p> ...</div><div class='long'><p><p>渡された値がjavaScriptの配列であればtrue、さもなくばfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>target</span> : Object<div class='sub-desc'><p><p>テストする対象</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isBoolean' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isBoolean' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isBoolean' class='name expandable'>isBoolean</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>渡された値が論理値(boolean)であればtrueを返します。</p> ...</div><div class='long'><p><p>渡された値が論理値(boolean)であればtrueを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>テストする値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isDate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isDate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isDate' class='name expandable'>isDate</a>( <span class='pre'>Object object</span> ) : Boolean</div><div class='description'><div class='short'><p>渡された値がjavaScriptのDateオブジェクトである場合にはtrue、さもなくばfal...</p> ...</div><div class='long'><p><p>渡された値がjavaScriptのDateオブジェクトである場合にはtrue、さもなくばfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object<div class='sub-desc'><p><p>テストするオブジェクト。</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isDefined' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isDefined' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isDefined' class='name expandable'>isDefined</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>渡された値が定義されていたらtrueを返します。</p> ...</div><div class='long'><p><p>渡された値が定義されていたらtrueを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>テストする値。</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isEmpty' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isEmpty' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isEmpty' class='name expandable'>isEmpty</a>( <span class='pre'>Object value, Boolean allowEmptyString</span> ) : Boolean</div><div class='description'><div class='short'><p>value値がnullまたは、undefined、または空文字列、空配列の場合、trueを返し...</p> ...</div><div class='long'><p><p>value値がnullまたは、undefined、または空文字列、空配列の場合、trueを返します。 空文字列をEmpty(空)としない場合は、allowBlankにtrueを設定します。</p>\n\n<ul>\n<li><code>null</code></li>\n<li><code>undefined</code></li>\n<li>空配列</li>\n<li>空文字列(空文字列を空と判定しない場合は、allowEmptyStringをtrueに設定します。)</li>\n</ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>調べる値</p></p>\n</div></li><li><span class='pre'>allowEmptyString</span> : Boolean<div class='sub-desc'><p><p>(オプション)空文字列を空としない場合はtrueを設定(初期値:false)</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isFunction' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isFunction' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isFunction' class='name expandable'>isFunction</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>値が関数オブジェクトの場合はtrue、そうでない場合はfalseを返します。</p> ...</div><div class='long'><p><p>値が関数オブジェクトの場合はtrue、そうでない場合はfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>調べる値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isIterable' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isIterable' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isIterable' class='name expandable'>isIterable</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>渡された値がイテレートできるものであればtrueを返し、さもなくばfalseを返します。</p> ...</div><div class='long'><p><p>渡された値がイテレートできるものであればtrueを返し、さもなくばfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>テストする値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isNumber' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isNumber' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isNumber' class='name expandable'>isNumber</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>値が数値型の場合true、そうでない場合はfalseを返します。</p> ...</div><div class='long'><p><p>値が数値型の場合true、そうでない場合はfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>調べる値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isNumeric' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isNumeric' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isNumeric' class='name expandable'>isNumeric</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>値が数値であるか確認します。</p> ...</div><div class='long'><p><p>値が数値であるか確認します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>例: 1, '1', '2.34'</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p><p>値が数値であればtrue、さもなくばfalse</p></p>\n</div></li></ul></div></div></div><div id='method-isObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isObject' class='name expandable'>isObject</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>値が、オブジェクト型の場合true、そうでない場合はfalseを返します。</p> ...</div><div class='long'><p><p>値が、オブジェクト型の場合true、そうでない場合はfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>調べる値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isPrimitive' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isPrimitive' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isPrimitive' class='name expandable'>isPrimitive</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>値が、文字列型か数値型か真偽型の場合はtrue、そうでない場合はfalseを返します。</p> ...</div><div class='long'><p><p>値が、文字列型か数値型か真偽型の場合はtrue、そうでない場合はfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>調べる値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-isSimpleObject' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isSimpleObject' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isSimpleObject' class='name expandable'>isSimpleObject</a>( <span class='pre'>Object value</span> )<strong class='private signature'>private</strong></div><div class='description'><div class='short'> ...</div><div class='long'>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'>\n</div></li></ul></div></div></div><div id='method-isString' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-isString' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-isString' class='name expandable'>isString</a>( <span class='pre'>Object value</span> ) : Boolean</div><div class='description'><div class='short'><p>値が文字列型の場合はtrue、そうでない場合はfalseを返します。</p> ...</div><div class='long'><p><p>値が文字列型の場合はtrue、そうでない場合はfalseを返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>調べる値</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-iterate' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-iterate' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-iterate' class='name expandable'>iterate</a>( <span class='pre'>Object/Array object, Function fn, Object scope</span> )</div><div class='description'><div class='short'><p>配列の各要素か、オブジェクトのプロパティを繰り返します。</p> ...</div><div class='long'><p><p>配列の各要素か、オブジェクトのプロパティを繰り返します。\nこのメソッドは列挙できる値の場合は、\n<a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\" >Ext.Array.each</a>\nに、そうでなければ\n<a href=\"#!/api/Ext.Object-method-each\" rel=\"Ext.Object-method-each\" class=\"docClass\" >Ext.Object.each</a>\nに処理を委譲します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>object</span> : Object/Array<div class='sub-desc'><p><p>繰り返しを行うオブジェクトか配列</p></p>\n</div></li><li><span class='pre'>fn</span> : Function<div class='sub-desc'><p><p>繰り返し時に呼び出す関数を設定します。 繰り返しを行うオブジェクトの種別によって、引数が異なります。 詳しくは、 Ext.Array.eachと Ext.Object.each を参照してください。\n<a href=\"#!/api/Ext.Array-method-each\" rel=\"Ext.Array-method-each\" class=\"docClass\" >Ext.Array.each</a>\nと\n<a href=\"#!/api/Ext.Object-method-each\" rel=\"Ext.Object-method-each\" class=\"docClass\" >Ext.Object.each</a>\nを参照してください。</p></p>\n</div></li><li><span class='pre'>scope</span> : Object<div class='sub-desc'><p><p>呼び出される関数スコープオブジェクトを設定します。デフォルト値は、繰り返されるオブジェクトです。</p></p>\n</div></li></ul></div></div></div><div id='method-log' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Logger.html#Ext-method-log' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-log' class='name expandable'>log</a>( <span class='pre'>String/Object message</span> ) : String</div><div class='description'><div class='short'> ...</div><div class='long'><p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>message</span> : String/Object<div class='sub-desc'><p>{Ext:method-log:param_message}</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-markdown' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-markdown' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-markdown' class='name expandable'>markdown</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.util.Markdown.parse</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.util.Markdown-method-parse\" rel=\"Ext.util.Markdown-method-parse\" class=\"docClass\">Ext.util.Markdown.parse</a>\nのショートカット。</p></p>\n</div></div></div><div id='method-merge' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-merge' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-merge' class='name expandable'>merge</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.Object.merge</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Object-method-merge\" rel=\"Ext.Object-method-merge\" class=\"docClass\" >Ext.Object.merge</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-moduleCacheClear' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-moduleCacheClear' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-moduleCacheClear' class='name expandable'>moduleCacheClear</a>( <span class='pre'>String path, Number mtime</span> )</div><div class='description'><div class='short'><p>モジュール キャッシュをクリアします。</p> ...</div><div class='long'><p><p>モジュール キャッシュをクリアします。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>path</span> : String<div class='sub-desc'><p><p>モジュールのパス</p></p>\n</div></li><li><span class='pre'>mtime</span> : Number<div class='sub-desc'><p><p>ファイル タイムスタンプ</p></p>\n</div></li></ul></div></div></div><div id='method-namespace' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-namespace' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-namespace' class='name expandable'>namespace</a>( <span class='pre'>String... namespaces</span> ) : Object</div><div class='description'><div class='short'><p>変数やクラスをスコープするネームスペースを生成します。</p> ...</div><div class='long'><p><p>変数やクラスをスコープするネームスペースを生成します。\nそれによりグローバル スコープを汚しません。\nnamespaceの最後のノードを指定した場合、その途中の全てのノードを暗黙的に生成します。 使用例:</p>\n\n<pre><code>Ext.namespace('Company', 'Company.data');\n\n// equivalent and preferable to the above syntax\nExt.ns('Company.data');\n\nCompany.Widget = function() { ... };\n\nCompany.data.CustomStore = function(config) { ... };\n</code></pre></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>namespaces</span> : String...<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>ネームスペース オブジェクト。\n(複数の引数が渡された場合は、最後に生成したネームスペース)</p></p>\n</div></li></ul></div></div></div><div id='method-ns' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/ClassManager.html#Ext-method-ns' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-ns' class='name expandable'>ns</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.namespace</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext-method-namespace\" rel=\"Ext-method-namespace\" class=\"docClass\" >Ext.namespace</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-require' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Loader.html#Ext-method-require' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-require' class='name expandable'>require</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.Loader.require</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Loader-method-require\" rel=\"Ext.Loader-method-require\" class=\"docClass\">Ext.Loader.require</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-setLocale' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-setLocale' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-setLocale' class='name expandable'>setLocale</a>( <span class='pre'>String locale</span> ) : Boolean</div><div class='description'><div class='short'><p>Ext Serverのロケールを設定します。</p> ...</div><div class='long'><p><p>Ext Serverのロケールを設定します。\nデフォルトは 'en' で、ロケールに従ってエラーメッセージを表示します。\nprocess.env.LANGを読み出せる場合はその値を使います。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>locale</span> : String<div class='sub-desc'><p><p>ロケール (デフォルトは 'en')</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Boolean</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-syncRequire' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Loader.html#Ext-method-syncRequire' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-syncRequire' class='name expandable'>syncRequire</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.Loader.syncRequire</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Loader-method-syncRequire\" rel=\"Ext.Loader-method-syncRequire\" class=\"docClass\">Ext.Loader.syncRequire</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-toArray' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-toArray' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-toArray' class='name expandable'>toArray</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.Array.toArray</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Array-method-toArray\" rel=\"Ext.Array-method-toArray\" class=\"docClass\">Ext.Array.toArray</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-typeOf' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-typeOf' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-typeOf' class='name expandable'>typeOf</a>( <span class='pre'>Object value</span> ) : String</div><div class='description'><div class='short'><p>指定された変数のタイプを文字列形式で返します。出力される値は次のとおりです。</p> ...</div><div class='long'><p><p>指定された変数のタイプを文字列形式で返します。出力される値は次のとおりです。</p>\n\n<ul>\n<li><code>undefined</code>: 与えられた値は <code>undefined</code> である</li>\n<li><code>null</code>: 与えられた値は <code>null</code> である</li>\n<li><code>string</code>: 与えられた値は文字列である</li>\n<li><code>number</code>: 与えられた値は数値である</li>\n<li><code>boolean</code>: 与えられた値は論理値である</li>\n<li><code>date</code>: 与えられた値は <code>Date</code> オブジェクトである</li>\n<li><code>function</code>: 与えられた値は関数への参照である</li>\n<li><code>object</code>: 与えられた値はオブジェクトである</li>\n<li><code>array</code>: 与えられた値は配列である</li>\n<li><code>regexp</code>: 与えられた値は正規表現式である</li>\n<li><code>element</code>: 与えられた値はDOMエレメントである</li>\n<li><code>textnode</code>: 与えられた値はDOMテキスト ノードであり空白以外の文字である</li>\n<li><code>whitespace</code>: 与えられた値はDOMテキスト ノードであり空白文字だけである</li>\n</ul></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-uid' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-uid' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-uid' class='name expandable'>uid</a>( <span class='pre'>Number len</span> ) : String</div><div class='description'><div class='short'><p>ユニークなIDを生成します。</p> ...</div><div class='long'><p><p>ユニークなIDを生成します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>len</span> : Number<div class='sub-desc'><p><p>長さ</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>String</span><div class='sub-desc'><p></p>\n</div></li></ul></div></div></div><div id='method-union' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-union' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-union' class='name expandable'>union</a>( <span class='pre'></span> )</div><div class='description'><div class='short'><p>Ext.Array.merge</p> ...</div><div class='long'><p><p><a href=\"#!/api/Ext.Array-method-merge\" rel=\"Ext.Array-method-merge\" class=\"docClass\" >Ext.Array.merge</a>\nのエリアスです。</p></p>\n</div></div></div><div id='method-valueFrom' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='Ext'>Ext</span><br/><a href='source/Ext.html#Ext-method-valueFrom' target='_blank' class='view-source'>view source</a></div><a href='#!/api/Ext-method-valueFrom' class='name expandable'>valueFrom</a>( <span class='pre'>Object value, Object defaultValue, Boolean allowBlank</span> ) : Object</div><div class='description'><div class='short'><p>指定された値(value)が空</p> ...</div><div class='long'><p><p>指定された値(value)が空\n(<a href=\"#!/api/Ext-method-isEmpty\" rel=\"Ext-method-isEmpty\" class=\"docClass\">Ext.isEmpty</a>\nでtrueと判定される)\n場合は\ndefaultValueを\nを返し、そうでなければその値自身を返します。</p></p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>value</span> : Object<div class='sub-desc'><p><p>テストする値</p></p>\n</div></li><li><span class='pre'>defaultValue</span> : Object<div class='sub-desc'><p><p>オリジナルのvalueが空の時に返す値。</p></p>\n</div></li><li><span class='pre'>allowBlank</span> : Boolean<div class='sub-desc'><p><p>(オプション)\ntrueにすると長さ0の文字列を許可し空ではないと判定します。(デフォルトはfalse)</p></p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Object</span><div class='sub-desc'><p><p>空の場合はvalue、さもなくばdefaultValue</p></p>\n</div></li></ul></div></div></div></div></div></div></div>","subclasses":[],"requires":[],"mixins":[],"code_type":"nop","inheritable":false,"meta":{},"files":[{"href":"Ext.html#Ext","filename":"Ext.js"}],"uses":[],"members":{"cfg":[],"event":[],"method":[{"owner":"Ext","meta":{},"tagname":"method","name":"apply","id":"method-apply"},{"owner":"Ext","meta":{},"tagname":"method","name":"applyIf","id":"method-applyIf"},{"owner":"Ext","meta":{},"tagname":"method","name":"clone","id":"method-clone"},{"owner":"Ext","meta":{},"tagname":"method","name":"create","id":"method-create"},{"owner":"Ext","meta":{},"tagname":"method","name":"createByAlias","id":"method-createByAlias"},{"owner":"Ext","meta":{},"tagname":"method","name":"decode","id":"method-decode"},{"owner":"Ext","meta":{"markdown":true},"tagname":"method","name":"define","id":"method-define"},{"owner":"Ext","meta":{},"tagname":"method","name":"each","id":"method-each"},{"owner":"Ext","meta":{},"tagname":"method","name":"emptyFn","id":"method-emptyFn"},{"owner":"Ext","meta":{},"tagname":"method","name":"encode","id":"method-encode"},{"owner":"Ext","meta":{},"tagname":"method","name":"exclude","id":"method-exclude"},{"owner":"Ext","meta":{},"tagname":"method","name":"getClass","id":"method-getClass"},{"owner":"Ext","meta":{},"tagname":"method","name":"getClassName","id":"method-getClassName"},{"owner":"Ext","meta":{},"tagname":"method","name":"getRandomInt","id":"method-getRandomInt"},{"owner":"Ext","meta":{},"tagname":"method","name":"isArray","id":"method-isArray"},{"owner":"Ext","meta":{},"tagname":"method","name":"isBoolean","id":"method-isBoolean"},{"owner":"Ext","meta":{},"tagname":"method","name":"isDate","id":"method-isDate"},{"owner":"Ext","meta":{},"tagname":"method","name":"isDefined","id":"method-isDefined"},{"owner":"Ext","meta":{},"tagname":"method","name":"isEmpty","id":"method-isEmpty"},{"owner":"Ext","meta":{},"tagname":"method","name":"isFunction","id":"method-isFunction"},{"owner":"Ext","meta":{},"tagname":"method","name":"isIterable","id":"method-isIterable"},{"owner":"Ext","meta":{},"tagname":"method","name":"isNumber","id":"method-isNumber"},{"owner":"Ext","meta":{},"tagname":"method","name":"isNumeric","id":"method-isNumeric"},{"owner":"Ext","meta":{},"tagname":"method","name":"isObject","id":"method-isObject"},{"owner":"Ext","meta":{},"tagname":"method","name":"isPrimitive","id":"method-isPrimitive"},{"owner":"Ext","meta":{"private":true},"tagname":"method","name":"isSimpleObject","id":"method-isSimpleObject"},{"owner":"Ext","meta":{},"tagname":"method","name":"isString","id":"method-isString"},{"owner":"Ext","meta":{},"tagname":"method","name":"iterate","id":"method-iterate"},{"owner":"Ext","meta":{},"tagname":"method","name":"log","id":"method-log"},{"owner":"Ext","meta":{},"tagname":"method","name":"markdown","id":"method-markdown"},{"owner":"Ext","meta":{},"tagname":"method","name":"merge","id":"method-merge"},{"owner":"Ext","meta":{},"tagname":"method","name":"moduleCacheClear","id":"method-moduleCacheClear"},{"owner":"Ext","meta":{},"tagname":"method","name":"namespace","id":"method-namespace"},{"owner":"Ext","meta":{},"tagname":"method","name":"ns","id":"method-ns"},{"owner":"Ext","meta":{},"tagname":"method","name":"require","id":"method-require"},{"owner":"Ext","meta":{},"tagname":"method","name":"setLocale","id":"method-setLocale"},{"owner":"Ext","meta":{},"tagname":"method","name":"syncRequire","id":"method-syncRequire"},{"owner":"Ext","meta":{},"tagname":"method","name":"toArray","id":"method-toArray"},{"owner":"Ext","meta":{},"tagname":"method","name":"typeOf","id":"method-typeOf"},{"owner":"Ext","meta":{},"tagname":"method","name":"uid","id":"method-uid"},{"owner":"Ext","meta":{},"tagname":"method","name":"union","id":"method-union"},{"owner":"Ext","meta":{},"tagname":"method","name":"valueFrom","id":"method-valueFrom"}],"property":[{"owner":"Ext","meta":{},"tagname":"property","name":"emptyString","id":"property-emptyString"},{"owner":"Ext","meta":{},"tagname":"property","name":"name","id":"property-name"}],"css_var":[],"css_mixin":[]},"html_meta":{},"aliases":{},"superclasses":[],"component":false,"tagname":"class","name":"Ext","alternateClassNames":[],"inheritdoc":null,"id":"class-Ext","mixedInto":[],"extends":null});